basePath: /api
definitions:
  models.AuthRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.LoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/models.UserSafe'
    type: object
  models.UserSafe:
    properties:
      id:
        type: integer
      role:
        type: string
      username:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: REST API sederhana untuk manajemen data mahasiswa
  title: Sistem Manajemen Mahasiswa
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with static credentials and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to generate token
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: User login
      tags:
      - Authentication
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: Diawali dengan "Bearer " lalu diikuti dengan token yang bisa diambil
      dari /api/auth/login
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
